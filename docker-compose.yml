services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "80:80"
    environment:
      - APP_ENV=dev
      - APP_SECRET=24e17c47430bd2044a61c131c1cf6990
      - DATABASE_URL=postgresql://user:password@db:5432/symfony?serverVersion=15&charset=utf8
      - COMPOSER_ALLOW_SUPERUSER=1
    depends_on:
      - db
    volumes:
      - .:/var/www/html:cached
      - vendor:/var/www/html/vendor:delegated
      - var:/var/www/html/var:delegated
      - composer_cache:/var/www/.composer:delegated
    user: www-data

  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=symfony
    volumes:
      - postgres_data:/var/lib/postgresql/data

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
  postgres_data:
  vendor:
  var:
  composer_cache:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
